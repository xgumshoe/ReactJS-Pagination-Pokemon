{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","Pagination","gotoNextPage","gotoPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAEe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAClC,OACI,8BAEQA,EAAQC,KAAI,SAAAC,GAAC,OACT,8BAAcA,GAAJA,Q,oBCLf,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC/C,OACI,gCACKA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qBC0CdG,MA3Cf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACJR,EADI,KACKS,EADL,OAEiCD,mBAAS,qCAF1C,mBAEJE,EAFI,KAEYC,EAFZ,OAG2BH,qBAH3B,mBAGJI,EAHI,KAGSC,EAHT,OAI2BL,qBAJ3B,mBAIJM,EAJI,KAISC,EAJT,OAKmBP,oBAAS,GAL5B,mBAKJQ,EALI,KAKKC,EALL,KA8BX,OAvBAC,qBAAU,WAEN,IAAIC,EAUJ,OAXAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACtBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAClDC,MAAK,SAAAC,GACJT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,YAGpC,kBAAMZ,OACd,CAACT,IAUDM,EAAgB,aAGf,qCACI,cAACjB,EAAD,CAAaC,QAASA,IACtB,cAACG,EAAD,CACIC,aAAcQ,EAd1B,WACID,EAAkBC,IAaiC,KAC3CP,aAAcS,EAX1B,WACIH,EAAkBG,IAUiC,WCtC3DkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5f157b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n    return (\r\n        <div>\r\n            {\r\n                pokemon.map(p => (\r\n                    <div key={p}>{p}</div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Pagination({ gotoNextPage, gotoPrevPage }) {\r\n    return (\r\n        <div>\r\n            {gotoPrevPage && <button onClick={gotoPrevPage}>Previous</button>}\r\n            {gotoNextPage && <button onClick={gotoNextPage}>Next</button>}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport PokemonList from './PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from './Pagination'\r\n\r\nfunction App() {\r\n    const [pokemon, setPokemon] = useState([])\r\n    const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\")\r\n    const [nextPageUrl, setNextPageUrl] = useState()\r\n    const [prevPageUrl, setPrevPageUrl] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        let cancel\r\n        axios.get(currentPageUrl, {\r\n            cancelToken: new axios.CancelToken(c => cancel = c)\r\n        }).then(res => {\r\n            setLoading(false)\r\n            setNextPageUrl(res.data.next)\r\n            setPrevPageUrl(res.data.previous)\r\n            setPokemon(res.data.results.map(p => p.name))\r\n        })\r\n\r\n        return () => cancel()\r\n    }, [currentPageUrl])\r\n\r\n    function gotoNextPage() {\r\n        setCurrentPageUrl(nextPageUrl)\r\n    }\r\n\r\n    function gotoPrevPage() {\r\n        setCurrentPageUrl(prevPageUrl)\r\n    }\r\n\r\n    if(loading) return \"Loading...\"\r\n\r\n    return (\r\n        <>\r\n            <PokemonList pokemon={pokemon} />\r\n            <Pagination\r\n                gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n                gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}